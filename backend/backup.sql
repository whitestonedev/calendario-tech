--
-- PostgreSQL database dump
--

-- Dumped from database version 16.9 (Debian 16.9-1.pgdg120+1)
-- Dumped by pg_dump version 16.9 (Debian 16.9-1.pgdg120+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: public; Type: SCHEMA; Schema: -; Owner: calendariotech_db_user
--

-- *not* creating schema, since initdb creates it


ALTER SCHEMA public OWNER TO calendariotech_db_user;

--
-- Name: currencies; Type: TYPE; Schema: public; Owner: calendariotech_db_user
--

CREATE TYPE public.currencies AS ENUM (
    'BRL',
    'USD',
    'EUR',
    'AUD',
    'CAD'
);


ALTER TYPE public.currencies OWNER TO calendariotech_db_user;

--
-- Name: event_status; Type: TYPE; Schema: public; Owner: calendariotech_db_user
--

CREATE TYPE public.event_status AS ENUM (
    'requested',
    'approved',
    'declined'
);


ALTER TYPE public.event_status OWNER TO calendariotech_db_user;

--
-- Name: states; Type: TYPE; Schema: public; Owner: calendariotech_db_user
--

CREATE TYPE public.states AS ENUM (
    'AP',
    'AM',
    'BA',
    'CE',
    'DF',
    'ES',
    'GO',
    'MA',
    'MT',
    'MS',
    'MG',
    'PA',
    'PB',
    'PR',
    'PE',
    'PI',
    'RJ',
    'RN',
    'RS',
    'RO',
    'RR',
    'SC',
    'SP',
    'SE',
    'TO'
);


ALTER TYPE public.states OWNER TO calendariotech_db_user;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: alembic_version; Type: TABLE; Schema: public; Owner: calendariotech_db_user
--

CREATE TABLE public.alembic_version (
    version_num character varying(32) NOT NULL
);


ALTER TABLE public.alembic_version OWNER TO calendariotech_db_user;

--
-- Name: event_intl; Type: TABLE; Schema: public; Owner: calendariotech_db_user
--

CREATE TABLE public.event_intl (
    id integer NOT NULL,
    event_id integer NOT NULL,
    lang character varying NOT NULL,
    event_edition character varying,
    cost double precision,
    currency public.currencies,
    banner_link character varying,
    short_description character varying
);


ALTER TABLE public.event_intl OWNER TO calendariotech_db_user;

--
-- Name: event_intl_id_seq; Type: SEQUENCE; Schema: public; Owner: calendariotech_db_user
--

CREATE SEQUENCE public.event_intl_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.event_intl_id_seq OWNER TO calendariotech_db_user;

--
-- Name: event_intl_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: calendariotech_db_user
--

ALTER SEQUENCE public.event_intl_id_seq OWNED BY public.event_intl.id;


--
-- Name: event_tags; Type: TABLE; Schema: public; Owner: calendariotech_db_user
--

CREATE TABLE public.event_tags (
    id integer NOT NULL,
    event_id integer NOT NULL,
    tag_id integer NOT NULL
);


ALTER TABLE public.event_tags OWNER TO calendariotech_db_user;

--
-- Name: event_tags_id_seq; Type: SEQUENCE; Schema: public; Owner: calendariotech_db_user
--

CREATE SEQUENCE public.event_tags_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.event_tags_id_seq OWNER TO calendariotech_db_user;

--
-- Name: event_tags_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: calendariotech_db_user
--

ALTER SEQUENCE public.event_tags_id_seq OWNED BY public.event_tags.id;


--
-- Name: events; Type: TABLE; Schema: public; Owner: calendariotech_db_user
--

CREATE TABLE public.events (
    id integer NOT NULL,
    organization_name character varying NOT NULL,
    event_name character varying NOT NULL,
    start_datetime timestamp without time zone NOT NULL,
    end_datetime timestamp without time zone NOT NULL,
    maps_link character varying,
    online boolean,
    event_link character varying,
    address character varying,
    state public.states NOT NULL,
    is_free boolean NOT NULL,
    status public.event_status NOT NULL
);


ALTER TABLE public.events OWNER TO calendariotech_db_user;

--
-- Name: COLUMN events.is_free; Type: COMMENT; Schema: public; Owner: calendariotech_db_user
--

COMMENT ON COLUMN public.events.is_free IS 'Indicates if the event is free or not';


--
-- Name: events_id_seq; Type: SEQUENCE; Schema: public; Owner: calendariotech_db_user
--

CREATE SEQUENCE public.events_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.events_id_seq OWNER TO calendariotech_db_user;

--
-- Name: events_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: calendariotech_db_user
--

ALTER SEQUENCE public.events_id_seq OWNED BY public.events.id;


--
-- Name: tags; Type: TABLE; Schema: public; Owner: calendariotech_db_user
--

CREATE TABLE public.tags (
    id integer NOT NULL,
    name character varying NOT NULL
);


ALTER TABLE public.tags OWNER TO calendariotech_db_user;

--
-- Name: tags_id_seq; Type: SEQUENCE; Schema: public; Owner: calendariotech_db_user
--

CREATE SEQUENCE public.tags_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.tags_id_seq OWNER TO calendariotech_db_user;

--
-- Name: tags_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: calendariotech_db_user
--

ALTER SEQUENCE public.tags_id_seq OWNED BY public.tags.id;


--
-- Name: event_intl id; Type: DEFAULT; Schema: public; Owner: calendariotech_db_user
--

ALTER TABLE ONLY public.event_intl ALTER COLUMN id SET DEFAULT nextval('public.event_intl_id_seq'::regclass);


--
-- Name: event_tags id; Type: DEFAULT; Schema: public; Owner: calendariotech_db_user
--

ALTER TABLE ONLY public.event_tags ALTER COLUMN id SET DEFAULT nextval('public.event_tags_id_seq'::regclass);


--
-- Name: events id; Type: DEFAULT; Schema: public; Owner: calendariotech_db_user
--

ALTER TABLE ONLY public.events ALTER COLUMN id SET DEFAULT nextval('public.events_id_seq'::regclass);


--
-- Name: tags id; Type: DEFAULT; Schema: public; Owner: calendariotech_db_user
--

ALTER TABLE ONLY public.tags ALTER COLUMN id SET DEFAULT nextval('public.tags_id_seq'::regclass);


--
-- Data for Name: alembic_version; Type: TABLE DATA; Schema: public; Owner: calendariotech_db_user
--

COPY public.alembic_version (version_num) FROM stdin;
ecf0a0c53a6d
\.


--
-- Data for Name: event_intl; Type: TABLE DATA; Schema: public; Owner: calendariotech_db_user
--

COPY public.event_intl (id, event_id, lang, event_edition, cost, currency, banner_link, short_description) FROM stdin;
\.


--
-- Data for Name: event_tags; Type: TABLE DATA; Schema: public; Owner: calendariotech_db_user
--

COPY public.event_tags (id, event_id, tag_id) FROM stdin;
\.


--
-- Data for Name: events; Type: TABLE DATA; Schema: public; Owner: calendariotech_db_user
--

COPY public.events (id, organization_name, event_name, start_datetime, end_datetime, maps_link, online, event_link, address, state, is_free, status) FROM stdin;
\.


--
-- Data for Name: tags; Type: TABLE DATA; Schema: public; Owner: calendariotech_db_user
--

COPY public.tags (id, name) FROM stdin;
\.


--
-- Name: event_intl_id_seq; Type: SEQUENCE SET; Schema: public; Owner: calendariotech_db_user
--

SELECT pg_catalog.setval('public.event_intl_id_seq', 1, false);


--
-- Name: event_tags_id_seq; Type: SEQUENCE SET; Schema: public; Owner: calendariotech_db_user
--

SELECT pg_catalog.setval('public.event_tags_id_seq', 1, false);


--
-- Name: events_id_seq; Type: SEQUENCE SET; Schema: public; Owner: calendariotech_db_user
--

SELECT pg_catalog.setval('public.events_id_seq', 1, false);


--
-- Name: tags_id_seq; Type: SEQUENCE SET; Schema: public; Owner: calendariotech_db_user
--

SELECT pg_catalog.setval('public.tags_id_seq', 1, false);


--
-- Name: alembic_version alembic_version_pkc; Type: CONSTRAINT; Schema: public; Owner: calendariotech_db_user
--

ALTER TABLE ONLY public.alembic_version
    ADD CONSTRAINT alembic_version_pkc PRIMARY KEY (version_num);


--
-- Name: event_intl event_intl_pkey; Type: CONSTRAINT; Schema: public; Owner: calendariotech_db_user
--

ALTER TABLE ONLY public.event_intl
    ADD CONSTRAINT event_intl_pkey PRIMARY KEY (id);


--
-- Name: event_tags event_tags_event_id_tag_id_key; Type: CONSTRAINT; Schema: public; Owner: calendariotech_db_user
--

ALTER TABLE ONLY public.event_tags
    ADD CONSTRAINT event_tags_event_id_tag_id_key UNIQUE (event_id, tag_id);


--
-- Name: event_tags event_tags_pkey; Type: CONSTRAINT; Schema: public; Owner: calendariotech_db_user
--

ALTER TABLE ONLY public.event_tags
    ADD CONSTRAINT event_tags_pkey PRIMARY KEY (id);


--
-- Name: events events_pkey; Type: CONSTRAINT; Schema: public; Owner: calendariotech_db_user
--

ALTER TABLE ONLY public.events
    ADD CONSTRAINT events_pkey PRIMARY KEY (id);


--
-- Name: tags tags_name_key; Type: CONSTRAINT; Schema: public; Owner: calendariotech_db_user
--

ALTER TABLE ONLY public.tags
    ADD CONSTRAINT tags_name_key UNIQUE (name);


--
-- Name: tags tags_pkey; Type: CONSTRAINT; Schema: public; Owner: calendariotech_db_user
--

ALTER TABLE ONLY public.tags
    ADD CONSTRAINT tags_pkey PRIMARY KEY (id);


--
-- Name: event_intl event_intl_event_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: calendariotech_db_user
--

ALTER TABLE ONLY public.event_intl
    ADD CONSTRAINT event_intl_event_id_fkey FOREIGN KEY (event_id) REFERENCES public.events(id) ON DELETE CASCADE;


--
-- Name: event_tags event_tags_event_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: calendariotech_db_user
--

ALTER TABLE ONLY public.event_tags
    ADD CONSTRAINT event_tags_event_id_fkey FOREIGN KEY (event_id) REFERENCES public.events(id) ON DELETE CASCADE;


--
-- Name: event_tags event_tags_tag_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: calendariotech_db_user
--

ALTER TABLE ONLY public.event_tags
    ADD CONSTRAINT event_tags_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES public.tags(id) ON DELETE CASCADE;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: -; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres GRANT ALL ON SEQUENCES TO calendariotech_db_user;


--
-- Name: DEFAULT PRIVILEGES FOR TYPES; Type: DEFAULT ACL; Schema: -; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres GRANT ALL ON TYPES TO calendariotech_db_user;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: -; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres GRANT ALL ON FUNCTIONS TO calendariotech_db_user;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: -; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres GRANT ALL ON TABLES TO calendariotech_db_user;


--
-- PostgreSQL database dump complete
--

